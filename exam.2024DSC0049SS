{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "8c111de3-c9e6-4224-ba41-28de13eb7dad",
   "metadata": {},
   "source": [
    "## question 5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "6deb1987-76d2-4cfd-b6b8-388fb70ff5d0",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "e0a1176f-f539-4b15-bf2e-c1138f639d54",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[1.  0.2 0.5]\n",
      " [0.2 1.  0.8]\n",
      " [0.5 0.8 1. ]]\n"
     ]
    }
   ],
   "source": [
    "x= np.array([[1,0.2,0.5],[0.2,1,0.8],[0.5,0.8,1]])\n",
    "print(x)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5cf8659c-7784-4e7f-bcff-aa7455b6606a",
   "metadata": {},
   "source": [
    "## transpose"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "e47d8de6-a05e-41d6-8850-6ea168eefba1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[1.  0.2 0.5]\n",
      " [0.2 1.  0.8]\n",
      " [0.5 0.8 1. ]]\n",
      "[[1.  0.2 0.5]\n",
      " [0.2 1.  0.8]\n",
      " [0.5 0.8 1. ]]\n"
     ]
    }
   ],
   "source": [
    "x= np.array([[1,0.2,0.5],[0.2,1,0.8],[0.5,0.8,1]])\n",
    "xt= np.transpose(x)\n",
    "print(x)\n",
    "print(xt)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "083dca83-d38a-4018-9b3b-d944fc780e17",
   "metadata": {},
   "source": [
    "## determinant"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "1563de57-5ee3-4306-8675-11574d80f20e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.2299999999999999"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "det_x= np.linalg.det(x)\n",
    "det_x"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d3c47ba1-5f55-441d-bce6-47f7a51f0900",
   "metadata": {},
   "source": [
    "## question 6"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3a267c71-9ed9-49d1-a1f1-5e875152e214",
   "metadata": {},
   "source": [
    "## a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "add2fb12-060f-41c9-bf39-2767c34e819b",
   "metadata": {},
   "outputs": [],
   "source": [
    "from numpy import random"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "1fc2f4ee-a3f4-4e8f-93a5-8b6afa0f3dae",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 4  4  6  7  6 10  7  5  3  5  5  5  5  5  8  4  4  3  6  8  5  1  5  5\n",
      "  4  3  8  7  6  3  2  7 13  2  8  7 11  6  6  8  2  4  7  0  5  5  4  4\n",
      "  3  4  3  7  4  8  4  4  7  4  1  4  3  6  6  4  6  9  5  7  6  6  4  4\n",
      "  3  6  4  6  9  1  5  5  5  7  8  5  5  9  6  2  5  6  6  3  5  0  4  4\n",
      "  7  8  6  6  4  4  4  7  2  3  9  5  5  5  9  4  1  5  3  3  6  5  4  5\n",
      "  4  2  2  5  3  2  3  7  5  5  4  7  2  3  3  5  9  6  4  3  6  7  1  5\n",
      "  2  2  4  9  6  7  4  2  5  4  6  8  7  3  9  3  3  5  8  4  4  5  4  4\n",
      "  6  5  3  8  2  9  6  4  4  6  5  5  7  7  8  6  3  5  6  4  3  3  0  7\n",
      "  5  5  6  7  6  2  3  5  5  1  8  8  8  6  6  4  4  3  5  5  7  6  4  4\n",
      "  4  3  7  5  5  6  4  9  4  5  4 12  6  6  7  4  6  2  4  5  5  4  2  5\n",
      "  4  3 11  1  5  5  6  3  5  3  4  8  4  5  5  7  5  3  8  5  9  2  2  3\n",
      "  9  3  5  5  7  6  3  7  5  5 13  5  4  6  6  9  4  6 10  6  6  2  6  2\n",
      "  4  5  3  3  3  3 11  6  3  4  4  8  5  4  7  1  8  3  4  1  3  3  5  4\n",
      "  8  3  4  1  4  6 11  1  4 10  4  4  4  6  5  7  3  2  7 11  1  5  6 10\n",
      "  4  2  3  7  7 13  5  3  4  3  1 10  6  3  8  3  6  3  1  6  4  3  8  4\n",
      "  4  5  8  7  1  5  6 12  7  4  5  3  6  9  7  6  5  8  3  3  4  2  4  4\n",
      "  5  3  5  5  3  3 10  8  8  5  7  5  1 11  3  2 12  8  7  6  7  5  5  5\n",
      "  6  3  7  9  5  8  4  6  6  7  2  5  3  2  0  6  6  4  7  6  4  8  5  2\n",
      "  5  1  3  5  4  4  6  4  3  5  6  7  4  2  6  3  3  4  3  4  3  4  2  3\n",
      "  5  3  4  1  3 10  4  6  6  4  5  4  4  5  8  7  4  2  5  9  7  6  6  3\n",
      "  1  4  5  5  4  7  1  2  6  9  5  8  4  3  5  5  1  6  2  5  4  3  2  7\n",
      "  3  8  4  6  3  4  4  7  4  5  5  7  5  7  8  3  6  3  8  2  2  4  5  5\n",
      "  2  4  8  7  7  5  4  5  4  3  7  5  7  6  5  6  5  4  4  4  8  7  3  3\n",
      "  6  3  8  6  3  4  6  4  6  6  5  2  4  4  2 11  5  4  3  3  3  2  7  7\n",
      "  4  5  4  5  7  2 11  9  4  5  5  3  4  1  7  5  4  4  1  7  4  1  6  2\n",
      "  1  7  6  4  6  9  7  6  3  4  4  7  4  6  4  5  4  4  7  3  5  2  8  5\n",
      "  6  4  5  6  8  2  4  3  5  5  3  6  5  4  3  7  6  5  5  5  4  3  2  4\n",
      "  6  4  5  1  8  6  2  3  5  7  8  5  8  5  3  2  7  6  2  9  1  3  4  4\n",
      "  8  7  5  2  4  4  4  3  1  5  3  6  7  3  5  7  6  3  3  4  3  7  7  2\n",
      "  9  4  4  4  4 10  6  6  5  6  7  4  6  7  7  6  9  3  4  2  8  7  6  2\n",
      "  1  2  8  0  3  2  5  5  3  4  3  4  7  1 10  1  3  5  5  9  5  2  4  6\n",
      "  7  5  5  7  5  5  3  8  7  5  3  6  5  2  3  7  4  4  2  8  2  9  1  9\n",
      "  4  8  4  6  7  1  4  6  3  4  2  3  7  7  6  8  3  5  2  6  6  0  3  8\n",
      "  6  3  3  1  3  3 10  7  7  6  5 11  4  1  6  6  7  6  4 12  3  6  4 12\n",
      "  3  2  7  3  8  3  2  2  7  9  2  6  4  4  2  2 11  0  5  3  3  8  4  6\n",
      "  3  5  5  6  3  5  7  5  5  1  3  5  4  2  3  9 10  4  3  3 11  8  6 10\n",
      "  1  5  3  7  3  6  2  5  3  7  3  4  4  7  3  4  1  5  3  3  9  1 10  4\n",
      "  4  4  1  5  2  1  3  2 10  4  3  6  7  3  7  4  6  2  5  2  7  5  1  6\n",
      "  1  5  1  9  5  4  4  6  7  6 10  3  8  5  2  6  4  7  2  2  4  6  5  4\n",
      "  4  4  8  6  4  4  9  7  4  4  7  3  7  6  7  8  7 10  2  3  7  1  7  4\n",
      "  2  8  6  4  3  5  2  9  4  3  4  5  4  0  2  7  9  3  5  1  4  6  8  3\n",
      "  3  3  5  5  8  3 12  7  5  5  4  2  5  1  3  1]\n"
     ]
    }
   ],
   "source": [
    "x= random.poisson(lam=5, size=1000)\n",
    "print(x)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9aa2537b-201d-4a90-8e6b-88c0b9bf0893",
   "metadata": {},
   "source": [
    "## b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "id": "94507e87-2d83-4245-b0c1-d91f4a9988c4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "4.905"
      ]
     },
     "execution_count": 112,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_mean=x.mean()\n",
    "x_mean"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "9a4f2d36-706d-4887-a1d0-3097fc66be92",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5.329975"
      ]
     },
     "execution_count": 117,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_var=x.var()\n",
    "x_var"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cd308ea3-ef7d-49ef-b8c7-e6aed6c89896",
   "metadata": {},
   "source": [
    "## c"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "2cd5092d-eac2-4a05-aaac-c8fe82908b06",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "5c4805a9-c021-4cfa-a751-0a40f9b5489a",
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "cc3e1d65-d483-49ba-a71f-0022cfbe8dfc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "poisson_data=random.poisson(lam=5, size=1000)\n",
    "sns.histplot(poisson_data, bins=10,kde=False, color=\"blue\")\n",
    "plt.title(\"Histogram and Visualization of Samples\")\n",
    "plt.xlabel(\"Samples\")\n",
    "plt.ylabel(\"Density\")\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8bdd0d2f-ced0-4b43-823a-1136fe6354d6",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
